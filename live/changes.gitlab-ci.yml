include:
  - local: common.gitlab-ci.yml

#### templates

.common_terragrunt_changes_template:
  extends:
    - .common_terraform_modules
    - .common_terragrunt_mr_template
  variables:
    CHANGED_DIRS: changed_dirs.txt
  script:
    - chmod a+rx $CI_PROJECT_DIR/_scripts/*.sh
    - $CI_PROJECT_DIR/_scripts/action_changed_dirs.sh
  needs:
    - detect_changes

# .destroy_terragrunt_changes_template:
#   extends:
#     - .common_terragrunt_changes_template
#   variables:
#     CHANGED_DIRS: changed_dirs.txt
#     DESTROY_DIRS: destroy_dirs.txt
#     ACTION: plan -destroy -out=tfplan.tfplan
#   script:
#     - touch $DESTROY_DIRS
#     - |
#       while read dir
#       do
#         if [ ! -d $dir ]
#         then
#           echo "$dir" >> $DESTROY_DIRS
#         fi
#       done < $CHANGED_DIRS
#     - export CHANGED_DIRS=$DESTROY_DIRS
#     - cp -r $CI_PROJECT_DIR/_scripts $CI_PROJECT_DIR/.scripts
#     - chmod a+rx $CI_PROJECT_DIR/.scripts/*.sh
#     - git -c http.sslVerify=false fetch --unshallow || true
#     - git -c http.sslVerify=false fetch origin $CI_DEFAULT_BRANCH
#     - git checkout $CI_DEFAULT_BRANCH
#     - $CI_PROJECT_DIR/.scripts/action_changed_dirs.sh
#     - ls -altr
#   needs:
#     - detect_changes
#   allow_failure: true

#### common jobs

detect_changes:
  needs: []
  stage: .pre
  extends:
    - .common_terragrunt_mr_template
  variables:
    CHANGED_DIRS: changed_dirs.txt
  script:
    - git -c http.sslVerify=false fetch --unshallow || true
    - git -c http.sslVerify=false fetch origin $CI_DEFAULT_BRANCH
    - chmod a+rx $CI_PROJECT_DIR/_scripts/*.sh
    - $CI_PROJECT_DIR/_scripts/detect_changed_dirs.sh > $CHANGED_DIRS
    - cat $CHANGED_DIRS
  artifacts:
    name: changed_dirs
    paths:
      - $CHANGED_DIRS
    expire_in: "8 hrs"

#### lint

validate-terraform-inputs-changes:
  extends:
    - .common_terragrunt_changes_template
    - .validate_terraform_inputs

#### validate

validate-terragrunt-units-changes:
  extends:
    - .common_terragrunt_changes_template
    - .validate_terragrunt_units

#### test

test-terragrunt-units-changes:
  extends:
    - .common_terragrunt_changes_template
    - .test_terragrunt_units

#### plan

plan-terragrunt-changes:
  variables:
    ACTION: plan -out=tfplan.tfplan
  extends:
    - .common_terragrunt_changes_template
    - .plan_terragrunt_units
  artifacts:
    name: tfplan
    paths:
      - ./**/tfplan.tfplan
      - ./**/tfplan.json
    expire_in: "8 hrs"

# plan-destroy-terragrunt-changes:
#   stage: plan
#   variables:
#     ACTION: plan -destroy -out=tfplan.tfplan
#   extends:
#     - .destroy_terragrunt_changes_template
#   artifacts:
#     name: tfplan
#     paths:
#       - ./**/tfplan.tfplan
#       - ./**/tfplan.json
#     expire_in: "8 hrs"

##### publish plan

publish-plan-terragrunt-changes:
  needs:
    - plan-terragrunt-changes
    # - plan-destroy-terragrunt-changes
  extends:
    - .publish_plan_terragrunt_units

#### destroy

# destroy-terragrunt-changes:
#   stage: destroy
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#       exists:
#         - "**/*.hcl"
#       when: manual
#   when: manual
#   extends:
#     - .destroy_terragrunt_changes_template
#   variables:
#     ACTION: destroy -auto-approve
#   needs:
#     - detect_changes
#     - plan-destroy-terragrunt-changes
#     - publish-plan-terragrunt-changes

#### apply

apply-terragrunt-changes:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      exists:
        - "**/*.hcl"
      when: manual
  extends:
    - .common_terragrunt_changes_template
    - .apply_terragrunt_units
  variables:
    ACTION: apply -auto-approve
  needs:
    - detect_changes
    - plan-terragrunt-changes
    - publish-plan-terragrunt-changes
